import {arrayBufferToUint8Array, uint8ArrayToBase64} from '@dfinity/utils';
import {encode} from '../agent/agentjs-cbor-copy';
import type {IcrcCallCanisterRequestParams} from '../types/icrc-requests';
import type {IcrcCallCanisterResult} from '../types/icrc-responses';
import {mockRequestDetails} from './custom-http-agent.mocks';
import {mockPrincipalText} from './icrc-accounts.mocks';

export const mockCallCanisterParams: IcrcCallCanisterRequestParams = {
  canisterId: mockPrincipalText,
  sender: mockPrincipalText,
  method: 'some_method',
  arg: uint8ArrayToBase64(new Uint8Array([1, 2, 3, 4, 5, 6, 7]))
};

export const mockEncodedContentMap = uint8ArrayToBase64(
  arrayBufferToUint8Array(encode(mockRequestDetails))
);

export const mockCallCanisterSuccess: IcrcCallCanisterResult = {
  // The mock values were generated by the test based on the certificate and request details. We assume that at the time of creating this test, these values were entirely accurate.
  certificate: '2dn39w==',
  contentMap: mockEncodedContentMap
};
